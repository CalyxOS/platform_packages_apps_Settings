{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b141275e_2d2242ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2024-06-26T20:01:26Z",
      "side": 1,
      "message": "Great find! Haven\u0027t tested but concept looks good to me.",
      "revId": "a0620ac41d4865083caedefeba410afd0ef18cf5",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cabdbe32_918c4af4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-26T20:05:26Z",
      "side": 1,
      "message": "Doesn\u0027t work on pattern. Need to find where to set that",
      "parentUuid": "b141275e_2d2242ff",
      "revId": "a0620ac41d4865083caedefeba410afd0ef18cf5",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18582495_a0c668ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-26T20:16:33Z",
      "side": 1,
      "message": "Hmm, complexity doesn\u0027t seem to apply to pattern? So can\u0027t read that value to conditionally hide the skip button?",
      "parentUuid": "cabdbe32_918c4af4",
      "revId": "a0620ac41d4865083caedefeba410afd0ef18cf5",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3aa4ad19_7e34a265",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2024-06-26T20:18:47Z",
      "side": 1,
      "message": "According to the docs, `PASSWORD_COMPLEXITY_LOW` may be a pattern. `MEDIUM` and `HIGH` can\u0027t be.\n\nCan we read the complexity from somewhere?\n\nBut now this makes me wonder if \"pattern\" is even properly prevented as an option for Safest. Not sure currently.",
      "parentUuid": "18582495_a0c668ec",
      "revId": "a0620ac41d4865083caedefeba410afd0ef18cf5",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a97d16b5_f85536f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-26T20:36:52Z",
      "side": 1,
      "message": "It doesn\u0027t seem to be prevented currently. Not sure why. Guessing it\u0027s another case of this value not being read somewhere?",
      "parentUuid": "3aa4ad19_7e34a265",
      "revId": "a0620ac41d4865083caedefeba410afd0ef18cf5",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9aa6178_9497f997",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-26T22:20:41Z",
      "side": 1,
      "message": "Seems to differ between safest and safer",
      "parentUuid": "a97d16b5_f85536f8",
      "revId": "a0620ac41d4865083caedefeba410afd0ef18cf5",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c50cdfb5_aae1fb9a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-27T00:01:56Z",
      "side": 1,
      "message": "Let\u0027s prevent pattern as an option for safest (and even safer, potentially)",
      "parentUuid": "d9aa6178_9497f997",
      "revId": "a0620ac41d4865083caedefeba410afd0ef18cf5",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5315363a_dacaa656",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-27T15:04:31Z",
      "side": 1,
      "message": "Squashed into previous commit",
      "revId": "a0620ac41d4865083caedefeba410afd0ef18cf5",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21386ebd_4584aa04",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-27T15:04:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c50cdfb5_aae1fb9a",
      "revId": "a0620ac41d4865083caedefeba410afd0ef18cf5",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4a238d6_379c63a7",
        "filename": "src/com/android/settings/password/ChooseLockPassword.java",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2024-06-26T20:05:13Z",
      "side": 1,
      "message": "Only small nit code-wise would be that maybe the subclass was probably not intended to be able to change mMinComplexity, and all we need to do is read it anyway. Guess that would require a `get` method. But it probably doesn\u0027t really matter enough to care, to be honest, so I\u0027ll keep this resolved.",
      "revId": "a0620ac41d4865083caedefeba410afd0ef18cf5",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Builds",
        "description": {
          "value": "Make sure it builds. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Builds\u003dMAX AND -label:Builds\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Builds\u003d0 AND (label:Works\u003dMAX OR label:Bypass-Verification\u003dMAX)"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Builds=MAX AND -label:Builds=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Builds=MAX","label:Builds=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Builds=0 AND (label:Works=MAX OR label:Bypass-Verification=MAX)"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Builds=0"],"failingAtoms":["label:Works=MAX","label:Bypass-Verification=MAX"]}
      },
      "patchSetCommitId": "a0620ac41d4865083caedefeba410afd0ef18cf5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a0620ac41d4865083caedefeba410afd0ef18cf5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Works",
        "description": {
          "value": "Make sure it works. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Works\u003dMAX AND -label:Works\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Works\u003d0 AND label:Bypass-Verification\u003dMAX"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Works=MAX AND -label:Works=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Works=MAX","label:Works=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Works=0 AND label:Bypass-Verification=MAX"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Works=0"],"failingAtoms":["label:Bypass-Verification=MAX"]}
      },
      "patchSetCommitId": "a0620ac41d4865083caedefeba410afd0ef18cf5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}